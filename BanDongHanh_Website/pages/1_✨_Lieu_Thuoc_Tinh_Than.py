import streamlit as st
import random

st.set_page_config(
    page_title="Li·ªÅu Thu·ªëc Tinh Th·∫ßn",
    page_icon="‚ú®",
    layout="centered"
)

# Th√™m FontAwesome qua CDN (kh√¥ng c·∫ßn pip)
st.markdown("""
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
<style>
    html, body, [class*="css"] {
        font-family: 'Quicksand', Arial, sans-serif;
    }
    .category-btn {
        background: #fff;
        border-radius: 18px;
        border: 2px solid #f0f2f5;
        padding: 1.5rem 0.5rem;
        margin: 0.6rem 0;
        text-align: center;
        transition: all 0.22s;
        color: #1c1731;
        font-weight: 600;
        font-size: 1.13rem;
        box-shadow: 0 4px 20px rgba(0,0,0,0.06);
        width: 100%;
        cursor: pointer;
        outline: none;
    }
    .category-btn:hover {
        border: 2px solid #0084ff;
        background: #e6f1ff;
        color: #0084ff;
        transform: translateY(-2px) scale(1.03);
        box-shadow: 0 8px 32px rgba(0,0,0,0.12);
    }
    .category-icon {
        font-size: 2.3rem;
        margin-bottom: 0.25rem;
        display:block;
    }
    .message-card {
        background: linear-gradient(100deg, #e1ffea 0%, #fff6eb 100%);
        border-radius: 15px;
        border: 1.5px solid #e3e7ea;
        padding: 2rem 1.3rem;
        margin: 1.5rem 0;
        font-size: 1.23rem;
        text-align: center;
        box-shadow: 0 4px 20px rgba(0,0,0,0.07);
        animation: popIn 0.5s;
    }
    @keyframes popIn {
        0% { opacity:0; transform:scale(0.8);}
        100% { opacity:1; transform:scale(1);}
    }
    @media (max-width: 600px) {
        .message-card { font-size: 1.09rem; padding: 1.2rem 0.5rem;}
        .category-btn { font-size: 1rem; }
    }
</style>
""", unsafe_allow_html=True)

# --- Th∆∞ vi·ªán n·ªôi dung ƒë∆∞·ª£c ph√¢n lo·∫°i ---
LOI_KHANG_DINH = [
    "H√¥m nay, t√¥i ch·ªçn b√¨nh y√™n.",
    "T√¥i ƒë·ªß m·∫°nh m·∫Ω ƒë·ªÉ v∆∞·ª£t qua m·ªçi th·ª≠ th√°ch.",
    "T√¥i x·ª©ng ƒë√°ng ƒë∆∞·ª£c y√™u th∆∞∆°ng v√† h·∫°nh ph√∫c.",
    "M·ªói h∆°i th·ªü ƒë·ªÅu mang l·∫°i cho t√¥i s·ª©c m·∫°nh.",
    "T√¥i bi·∫øt ∆°n v√¨ con ng∆∞·ªùi c·ªßa t√¥i ngay b√¢y gi·ªù."
]
GOC_VUI_VE = [
    "S·ª± th·∫≠t th√∫ v·ªã: R√°i c√° bi·ªÉn th∆∞·ªùng n·∫Øm tay nhau khi ng·ªß ƒë·ªÉ kh√¥ng b·ªã tr√¥i ƒëi m·∫•t.",
    "ƒê·ªë b·∫°n: C√°i g√¨ lu√¥n ·ªü ph√≠a tr∆∞·ªõc b·∫°n, nh∆∞ng b·∫°n kh√¥ng bao gi·ªù th·∫•y ƒë∆∞·ª£c? ... ƒê√≥ l√† t∆∞∆°ng lai!",
    "H√£y m·ªâm c∆∞·ªùi nh√©, v√¨ n·ª• c∆∞·ªùi c·ªßa b·∫°n c√≥ th·ªÉ th·∫Øp s√°ng m·ªôt ng√†y c·ªßa ai ƒë√≥.",
    "M·ªôt b·∫£n nh·∫°c vui v·∫ª c√≥ th·ªÉ thay ƒë·ªïi t√¢m tr·∫°ng c·ªßa b·∫°n ngay l·∫≠p t·ª©c ƒë·∫•y."
]
KHOANH_KHAC_CHANH_NIEM = [
    "H√£y h√≠t m·ªôt h∆°i th·∫≠t s√¢u... v√† th·ªü ra th·∫≠t ch·∫≠m. B·∫°n ƒëang ·ªü ƒë√¢y, ngay b√¢y gi·ªù.",
    "Nh√¨n ra ngo√†i c·ª≠a s·ªï. B·∫°n th·∫•y m√†u xanh n√†o kh√¥ng?",
    "H√£y ch√∫ √Ω ƒë·∫øn c·∫£m gi√°c c·ªßa ƒë√¥i ch√¢n ƒëang ch·∫°m ƒë·∫•t.",
    "B·∫°n ƒëang nghe th·∫•y √¢m thanh g√¨ xa nh·∫•t? √Çm thanh g√¨ g·∫ßn nh·∫•t?"
]

# --- Giao di·ªán trang ---
st.title("‚ú® Li·ªÅu Thu·ªëc Tinh Th·∫ßn Cho B·∫°n")
st.markdown(
    "<div style='font-size:1.1rem;line-height:1.6;'>"
    "ƒê√¥i khi, ch√∫ng ta ch·ªâ c·∫ßn m·ªôt l·ªùi nh·∫Øc nh·ªü nh·ªè ƒë·ªÉ c·∫£m th·∫•y t·ªët h∆°n.<br>"
    "<b>B·∫°n ƒëang c·∫ßn ƒëi·ªÅu g√¨ l√∫c n√†y?</b>"
    "</div>", unsafe_allow_html=True
)
st.write("---")

# Kh·ªüi t·∫°o session_state
if 'message_category' not in st.session_state:
    st.session_state.message_category = None
if 'current_message' not in st.session_state:
    st.session_state.current_message = ""

# Hi·ªÉn th·ªã n√∫t ch·ªçn danh m·ª•c v·ªõi icon ƒë·∫πp h∆°n
col1, col2, col3 = st.columns(3)
with col1:
    if st.button("üì£ C·∫ßn C·ªï V≈©", key="btn_courage"):
        st.session_state.message_category = "courage"
        st.session_state.current_message = random.choice(LOI_KHANG_DINH)
with col2:
    if st.button("üòÑ Mu·ªën Vui V·∫ª", key="btn_fun"):
        st.session_state.message_category = "fun"
        st.session_state.current_message = random.choice(GOC_VUI_VE)
with col3:
    if st.button("üßò T√¨m B√¨nh Y√™n", key="btn_peace"):
        st.session_state.message_category = "peace"
        st.session_state.current_message = random.choice(KHOANH_KHAC_CHANH_NIEM)

st.write("---")

# Hi·ªÉn th·ªã th√¥ng ƒëi·ªáp sau khi ch·ªçn
if st.session_state.current_message:
    # D√πng icon FontAwesome sinh ƒë·ªông h∆°n
    icon_html = {
        "courage": "<i class='fa-solid fa-bullhorn category-icon' style='color:#ff6a00'></i>",
        "fun": "<i class='fa-solid fa-face-laugh-beam category-icon' style='color:#fbbf24'></i>",
        "peace": "<i class='fa-solid fa-spa category-icon' style='color:#49c5b6'></i>",
    }
    icon = icon_html.get(st.session_state.message_category, "üíñ")
    st.markdown(f"""
    <div class="message-card">
        {icon}
        <div>{st.session_state.current_message}</div>
    </div>
    """, unsafe_allow_html=True)

    # N√∫t ƒë·ªïi th√¥ng ƒëi·ªáp m·ªõi
    if st.button("üîÑ Nh·∫≠n m·ªôt th√¥ng ƒëi·ªáp kh√°c c√πng lo·∫°i", key="btn_next_message"):
        if st.session_state.message_category == "courage":
            st.session_state.current_message = random.choice(LOI_KHANG_DINH)
        elif st.session_state.message_category == "fun":
            st.session_state.current_message = random.choice(GOC_VUI_VE)
        elif st.session_state.message_category == "peace":
            st.session_state.current_message = random.choice(KHOANH_KHAC_CHANH_NIEM)
        st.rerun()

    # Hi·ªáu ·ª©ng ƒë·ªông, ch·ªâ th·ªânh tho·∫£ng
    if random.random() < 0.25:
        st.balloons()
