# pages/9_üìñ_Ng∆∞·ªùi_K·ªÉ_Chuy·ªán.py
import streamlit as st
import random
from gtts import gTTS
from io import BytesIO

# --- C·∫§U H√åNH TRANG ---
st.set_page_config(page_title="Ng∆∞·ªùi K·ªÉ Chuy·ªán", page_icon="üìñ", layout="wide")

# --- KI·ªÇM TRA ƒêƒÇNG NH·∫¨P ---
if not st.session_state.get('user_id'):
    st.warning("B·∫°n ∆°i, h√£y quay v·ªÅ Trang Ch·ªß ƒë·ªÉ ƒëƒÉng nh·∫≠p nh√©! ‚ù§Ô∏è")
    st.stop()

# --- CSS GIAO DI·ªÜN HO√ÄN CH·ªàNH ---
st.markdown("""
<style>
/* CSS chung cho c√°c n√∫t b·∫•m */
.stButton > button {
    padding: 0.8rem 1.2rem; font-size: 1.15rem; font-weight: 600; width: 100%;
    margin-bottom: 0.7rem; border-radius: 12px; border: 2px solid #b39ddb;
    background-color: #f9f9fb; color: #6d28d9;
}
.stButton > button:hover { background-color: #f3e8ff; border-color: #5d3fd3; color: #5d3fd3; }

/* CSS cho ti√™u ƒë·ªÅ v√† khung tr·ª£ l√Ω ·∫£o */
.nkc-title-feature {
    font-size: 2.6rem; font-weight: 700; color: #5d3fd3; text-align: center;
    margin-bottom: 1.4rem; margin-top: 0.7rem; display: flex; align-items: center;
    justify-content: center; gap: 1.1rem;
}
.nkc-assist-bigbox {
    background: linear-gradient(120deg,#e0e7ff 0%,#f3e8ff 100%);
    border-radius: 38px; box-shadow: 0 8px 36px rgba(124,77,255,.13);
    padding: 3.2rem 2.8rem 2.1rem 2.8rem; margin-bottom: 2.3rem; margin-top: 0.2rem;
    text-align: center; border: 3.5px solid #b39ddb; max-width: 1700px;
    margin-left: auto; margin-right: auto;
}
.nkc-assist-icon { font-size: 3.2rem; margin-bottom: 0.7rem; }
.nkc-assist-text { font-size: 1.7rem; font-weight: 700; color: #6d28d9; margin-bottom: 1.1rem; }

/* --- CSS M·ªöI S·ª¨A L·ªñI M·∫§T CH·ªÆ V√Ä L√ÄM TO √î CH·ªåN --- */
.selectbox-label {
    font-size: 1.3rem !important;
    font-weight: 700 !important;
    color: #333 !important;
    padding-bottom: 0.5rem !important;
}
/* Style cho c√°i h·ªôp */
div[data-testid="stSelectbox"] div[data-baseweb="select"] > div {
    padding-top: 1rem !important;
    padding-bottom: 1rem !important;
    padding-left: 1rem !important;
    padding-right: 1rem !important;
    border-radius: 12px !important;
    border: 2px solid #b39ddb !important;
    background-color: #FFFFFF !important;
}
/* Style cho ch·ªØ b√™n trong h·ªôp */
div[data-testid="stSelectbox"] div[data-baseweb="select"] > div > div {
    font-size: 1.3rem !important;
    color: #333 !important; /* << D√íNG QUAN TR·ªåNG ƒê·ªÇ HI·ªÜN CH·ªÆ */
}
</style>
""", unsafe_allow_html=True)

# --- N·ªòI DUNG TRUY·ªÜN ---
@st.cache_data
def load_stories():
    # ... (N·ªôi dung truy·ªán c·ªßa b·∫°n gi·ªØ nguy√™n) ...
    return { "Truy·ªán truy·ªÅn c·∫£m h·ª©ng": [...], "Truy·ªán ng·ª• ng√¥n": [...], "Truy·ªán ch·ªØa l√†nh": [...] }
STORIES = load_stories()

# --- TR·ª¢ L√ù ·∫¢O ---
ASSISTANT_MESSAGES = [
    ("üìñ", "H√£y ch·ªçn m·ªôt th·ªÉ lo·∫°i v√† l·∫Øng nghe m·ªôt c√¢u chuy·ªán nh·ªè ƒë·ªÉ xoa d·ªãu t√¢m h·ªìn nh√©."),
    ("‚ú®", "M·ªói c√¢u chuy·ªán l√† m·ªôt b√†i h·ªçc. C√πng kh√°m ph√° v·ªõi Bee n√†o!"),
    ("üéß", "S·∫µn s√†ng l·∫Øng nghe ch∆∞a? Bee s·∫Ω k·ªÉ cho b·∫°n nh·ªØng c√¢u chuy·ªán hay nh·∫•t!"),
]
if "nkc_assistant_message" not in st.session_state:
    st.session_state.nkc_assistant_message = random.choice(ASSISTANT_MESSAGES)
avatar, msg = st.session_state.nkc_assistant_message

# --- GIAO DI·ªÜN CH√çNH ---
st.markdown('<div class="nkc-title-feature">...</div>', unsafe_allow_html=True) # R√∫t g·ªçn
st.markdown(f"""<div class="nkc-assist-bigbox">...</div>""", unsafe_allow_html=True) # R√∫t g·ªçn

col1, col2 = st.columns([1, 1])
with col1:
    if st.button("üí¨ Th√¥ng ƒëi·ªáp m·ªõi", key="new_msg_story"):
        st.session_state.nkc_assistant_message = random.choice(ASSISTANT_MESSAGES)
        st.rerun()
with col2:
    if st.button("üîä Nghe tr·ª£ l√Ω ·∫£o", key="tts_msg_story"):
        # ... (logic nghe tr·ª£ l√Ω ·∫£o) ...
        pass

st.markdown("‚¨ÖÔ∏è [Quay v·ªÅ Trang ch·ªß](/)", unsafe_allow_html=True)
st.write("---")

# --- PH·∫¶N CH·ªåN TRUY·ªÜN ƒê√É S·ª¨A ---
st.markdown("<p class='selectbox-label'>Ch·ªçn th·ªÉ lo·∫°i truy·ªán b·∫°n mu·ªën nghe:</p>", unsafe_allow_html=True)
selected_category = st.selectbox(
    "selectbox_for_stories",
    options=list(STORIES.keys()),
    label_visibility="collapsed"
)
st.write("---")

# --- PH·∫¶N HI·ªÇN TH·ªä TRUY·ªÜN ---
if selected_category:
    st.subheader(f"C√°c c√¢u chuy·ªán v·ªÅ {selected_category.lower()}:")
    for i, story in enumerate(STORIES[selected_category]):
        with st.expander(f"**{story['title']}**"):
            st.markdown(f"<p style='font-size: 1.1rem; line-height: 1.6;'>{story['content']}</p>", unsafe_allow_html=True)
            
            if st.button("Nghe truy·ªán üéß", key=f"listen_{selected_category}_{i}"):
                with st.spinner("ƒêang chu·∫©n b·ªã √¢m thanh..."):
                    # ... (logic nghe truy·ªán) ...
                    pass
