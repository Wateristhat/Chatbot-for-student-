import streamlit as st
import google.generativeai as genai
import time

st.set_page_config(page_title="Ng∆∞·ªùi K·ªÉ Chuy·ªán", page_icon="üìñ", layout="centered")

try:
    genai.configure(api_key=st.secrets["GOOGLE_API_KEY"])
    gemini_model = genai.GenerativeModel('gemini-1.5-flash')
    AI_ENABLED = True
except Exception:
    AI_ENABLED = False

@st.cache_data
def generate_story(prompt):
    if not AI_ENABLED:
        return "L·ªói: Kh√¥ng th·ªÉ k·∫øt n·ªëi t·ªõi AI. Vui l√≤ng ki·ªÉm tra API Key."
    try:
        creative_prompt = (
            f"H√£y vi·∫øt m·ªôt c√¢u chuy·ªán c·ªï t√≠ch th·∫≠t ng·∫Øn (kho·∫£ng 4-5 c√¢u), "
            f"v·ªõi n·ªôi dung th·∫≠t trong s√°ng, vui v·∫ª v√† c√≥ m·ªôt k·∫øt th√∫c t·ªët ƒë·∫πp d√†nh cho tr·∫ª em. "
            f"Ch·ªß ƒë·ªÅ c·ªßa c√¢u chuy·ªán l√†: '{prompt}'"
        )
        response = gemini_model.generate_content(creative_prompt)
        return response.text
    except Exception:
        return "R·∫•t ti·∫øc, m√¨nh kh√¥ng th·ªÉ nghƒ© ra c√¢u chuy·ªán ngay l√∫c n√†y."

# --- Giao di·ªán trang ---
st.title("üìñ Ng∆∞·ªùi K·ªÉ Chuy·ªán")
st.markdown("H√£y cho m√¨nh bi·∫øt b·∫°n mu·ªën nghe c√¢u chuy·ªán v·ªÅ ƒëi·ªÅu g√¨ nh√©!")

if 'story_topic' not in st.session_state:
    st.session_state.story_topic = ""
if 'generated_story' not in st.session_state:
    st.session_state.generated_story = ""

topic = st.text_input(
    "Ch·ªß ƒë·ªÅ c√¢u chuy·ªán (v√≠ d·ª•: m·ªôt ch√∫ th·ªè d≈©ng c·∫£m...)", 
    value=st.session_state.story_topic
)

if st.button("K·ªÉ chuy·ªán cho m√¨nh nghe!", type="primary"):
    if topic:
        st.session_state.story_topic = topic
        with st.spinner("M√¨nh ƒëang nghƒ© √Ω t∆∞·ªüng..."):
            story = generate_story(topic)
            st.session_state.generated_story = story
    else:
        st.warning("B·∫°n ∆°i, h√£y cho m√¨nh bi·∫øt ch·ªß ƒë·ªÅ c√¢u chuy·ªán nh√©!")

if st.session_state.generated_story:
    st.write("---")
    st.subheader(f"C√¢u chuy·ªán v·ªÅ '{st.session_state.story_topic}'")
    st.write(st.session_state.generated_story)
    st.success("Ch√∫c b·∫°n ƒë·ªçc truy·ªán vui v·∫ª!", icon="üéâ")
