import streamlit as st
import time
import pandas as pd
import sys
import os
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))
from database import add_mood_entry, get_mood_entries

# --- C·∫§U H√åNH TRANG ---
st.set_page_config(page_title="G√≥c An Y√™n", page_icon="üßò", layout="centered")

# --- GIAO DI·ªÜN CH√çNH ---
st.title("üßò G√≥c An Y√™n")

# *** NAVIGATION LINK ***
st.markdown("‚¨ÖÔ∏è [Quay v·ªÅ Trang ch·ªß](../0_üíñ_Trang_ch·ªß.py)")

st.markdown("D√†nh m·ªôt v√†i ph√∫t ƒë·ªÉ k·∫øt n·ªëi l·∫°i v·ªõi b·∫£n th√¢n v√† t√¨m th·∫•y s·ª± tƒ©nh l·∫∑ng.")
st.write("---")

# --- C√ÅC TAB CH·ª®C NƒÇNG ---
tab1, tab2, tab3 = st.tabs(["üå¨Ô∏è H∆°i Th·ªü Nhi·ªám M√†u", "üñêÔ∏è Ch·∫°m V√†o Hi·ªán T·∫°i", "üñºÔ∏è √î C·ª≠a S·ªï Th·∫ßn K·ª≥"])

# --- TAB 1: B√ÄI T·∫¨P H√çT TH·ªû ---
with tab1:
    st.header("üå¨Ô∏è H∆°i Th·ªü Nhi·ªám M√†u")
    st.write("B√†i t·∫≠p th·ªü h·ªôp (box breathing) gi√∫p l√†m d·ªãu h·ªá th·∫ßn kinh v√† gi·∫£m cƒÉng th·∫≥ng. H√£y c√πng nhau th·ª±c h√†nh nh√©.")

    duration = st.select_slider(
        "Ch·ªçn th·ªùi gian th·ª±c h√†nh (gi√¢y):",
        options=[60, 120, 180],
        value=60
    )

    if st.button("B·∫Øt ƒë·∫ßu h√≠t th·ªü", type="primary", use_container_width=True):
        placeholder = st.empty()
        progress_bar = st.progress(0, text="B·∫Øt ƒë·∫ßu th·ª±c h√†nh...")
        start_time = time.time()
        end_time = start_time + duration

        while time.time() < end_time:
            steps = ["H√≠t v√†o (4s)", "Gi·ªØ h∆°i (4s)", "Th·ªü ra (4s)", "Ngh·ªâ (4s)"]
            
            for step in steps:
                if time.time() >= end_time:
                    break
                
                with placeholder.container():
                    st.markdown(f"<h2 style='text-align: center; color: #2E8B57;'>{step}</h2>", unsafe_allow_html=True)
                    if "H√≠t v√†o" in step:
                        st.image("https://i.imgur.com/D4Jc0Vz.gif", use_column_width=True)
                    elif "Th·ªü ra" in step:
                        st.image("https://i.imgur.com/O4g3eFz.gif", use_column_width=True)
                    else:
                        st.image("https://i.imgur.com/y3yL4hA.png", use_column_width=True)
                
                step_start_time = time.time()
                while time.time() < step_start_time + 4:
                    if time.time() >= end_time:
                        break
                    
                    progress_percent = (time.time() - start_time) / duration
                    progress_bar.progress(min(progress_percent, 1.0), text=f"ƒêang th·ª±c h√†nh: {step}")
                    time.sleep(0.1)

        placeholder.success("Ho√†n th√†nh! B·∫°n ƒë√£ l√†m r·∫•t t·ªët. H√£y c·∫£m nh·∫≠n s·ª± b√¨nh y√™n trong c∆° th·ªÉ nh√©.")
        progress_bar.progress(100, text="ƒê√£ ho√†n th√†nh!")
        
        # Th√™m n√∫t chia s·∫ª c·∫£m nh·∫≠n sau khi ho√†n th√†nh
        st.write("---")
        if st.button("üí¨ Chia s·∫ª c·∫£m nh·∫≠n", key="share_breathing", use_container_width=True):
            st.session_state.show_breathing_sharing = True
            st.rerun()

    # Hi·ªÉn th·ªã form chia s·∫ª c·∫£m nh·∫≠n n·∫øu ƒë∆∞·ª£c k√≠ch ho·∫°t
    if st.session_state.get("show_breathing_sharing", False):
        st.markdown("#### üí≠ H√£y chia s·∫ª c·∫£m nh·∫≠n c·ªßa b·∫°n v·ªÅ b√†i t·∫≠p h√≠t th·ªü:")
        feeling_content = st.text_area(
            "C·∫£m nh·∫≠n c·ªßa b·∫°n:",
            placeholder="V√≠ d·ª•: Sau khi th·ª±c h√†nh, t√¥i c·∫£m th·∫•y b√¨nh tƒ©nh h∆°n v√† d·ªÖ t·∫≠p trung h∆°n...",
            key="breathing_feeling",
            help="H√£y m√¥ t·∫£ nh·ªØng g√¨ b·∫°n c·∫£m nh·∫≠n ƒë∆∞·ª£c sau khi th·ª±c h√†nh b√†i t·∫≠p h√≠t th·ªü"
        )
        
        col1, col2 = st.columns(2)
        with col1:
            if st.button("üíæ L∆∞u v√†o nh·∫≠t k√Ω c·∫£m x√∫c", key="save_breathing", use_container_width=True):
                if feeling_content.strip():
                    add_mood_entry("H∆°i Th·ªü Nhi·ªám M√†u", feeling_content.strip())
                    st.success("‚úÖ ƒê√£ l∆∞u c·∫£m nh·∫≠n v√†o nh·∫≠t k√Ω c·∫£m x√∫c!")
                    st.session_state.show_breathing_sharing = False
                    time.sleep(1)
                    st.rerun()
                else:
                    st.warning("Vui l√≤ng nh·∫≠p c·∫£m nh·∫≠n c·ªßa b·∫°n tr∆∞·ªõc khi l∆∞u!")
        
        with col2:
            if st.button("‚ùå H·ªßy", key="cancel_breathing", use_container_width=True):
                st.session_state.show_breathing_sharing = False
                st.rerun()

# --- TAB 2: B√ÄI T·∫¨P 5-4-3-2-1 ---
with tab2:
    st.header("üñêÔ∏è Ch·∫°m V√†o Hi·ªán T·∫°i (5-4-3-2-1)")
    st.write("Khi c·∫£m th·∫•y cho√°ng ng·ª£p, b√†i t·∫≠p n√†y gi√∫p b·∫°n quay v·ªÅ v·ªõi th·ª±c t·∫°i b·∫±ng c√°ch s·ª≠ d·ª•ng c√°c gi√°c quan.")
    st.info("**B∆∞·ªõc 1: 5 th·ª© b·∫°n c√≥ th·ªÉ TH·∫§Y** üëÄ")
    st.write("V√≠ d·ª•: c√°i b√†n, c√¢y b√∫t, b·ª©c tranh, c·ª≠a s·ªï, chi·∫øc l√°.")
    st.info("**B∆∞·ªõc 2: 4 th·ª© b·∫°n c√≥ th·ªÉ CH·∫†M** üñêÔ∏è")
    st.write("V√≠ d·ª•: m·∫∑t b√†n l√°ng m·ªãn, v·∫£i qu·∫ßn jean, l√†n gi√≥ m√°t, ly n∆∞·ªõc l·∫°nh.")
    st.info("**B∆∞·ªõc 3: 3 th·ª© b·∫°n c√≥ th·ªÉ NGHE** üëÇ")
    st.write("V√≠ d·ª•: ti·∫øng chim h√≥t, ti·∫øng qu·∫°t m√°y, ti·∫øng g√µ ph√≠m.")
    st.info("**B∆∞·ªõc 4: 2 th·ª© b·∫°n c√≥ th·ªÉ NG·ª¨I** üëÉ")
    st.write("V√≠ d·ª•: m√πi c√† ph√™, m√πi s√°ch c≈©, m√πi c·ªè c√¢y sau m∆∞a.")
    st.info("**B∆∞·ªõc 5: 1 th·ª© b·∫°n c√≥ th·ªÉ N·∫æM** üëÖ")
    st.write("V√≠ d·ª•: v·ªã ng·ªçt c·ªßa tr√†, v·ªã thanh c·ªßa n∆∞·ªõc l·ªçc.")
    st.success("Tuy·ªát v·ªùi! B·∫°n ƒë√£ k·∫øt n·ªëi th√†nh c√¥ng v·ªõi hi·ªán t·∫°i.")
    
    # Th√™m n√∫t chia s·∫ª c·∫£m nh·∫≠n cho b√†i t·∫≠p 5-4-3-2-1
    if st.button("üí¨ Chia s·∫ª c·∫£m nh·∫≠n", key="share_543", use_container_width=True):
        st.session_state.show_543_sharing = True
        st.rerun()

    # Hi·ªÉn th·ªã form chia s·∫ª c·∫£m nh·∫≠n n·∫øu ƒë∆∞·ª£c k√≠ch ho·∫°t
    if st.session_state.get("show_543_sharing", False):
        st.markdown("#### üí≠ H√£y chia s·∫ª c·∫£m nh·∫≠n c·ªßa b·∫°n v·ªÅ b√†i t·∫≠p 5-4-3-2-1:")
        feeling_content = st.text_area(
            "C·∫£m nh·∫≠n c·ªßa b·∫°n:",
            placeholder="V√≠ d·ª•: B√†i t·∫≠p gi√∫p t√¥i t·∫≠p trung v√†o hi·ªán t·∫°i v√† qu√™n ƒëi nh·ªØng lo l·∫Øng...",
            key="543_feeling",
            help="H√£y m√¥ t·∫£ nh·ªØng g√¨ b·∫°n c·∫£m nh·∫≠n ƒë∆∞·ª£c khi th·ª±c h√†nh b√†i t·∫≠p 5-4-3-2-1"
        )
        
        col1, col2 = st.columns(2)
        with col1:
            if st.button("üíæ L∆∞u v√†o nh·∫≠t k√Ω c·∫£m x√∫c", key="save_543", use_container_width=True):
                if feeling_content.strip():
                    add_mood_entry("Ch·∫°m V√†o Hi·ªán T·∫°i (5-4-3-2-1)", feeling_content.strip())
                    st.success("‚úÖ ƒê√£ l∆∞u c·∫£m nh·∫≠n v√†o nh·∫≠t k√Ω c·∫£m x√∫c!")
                    st.session_state.show_543_sharing = False
                    time.sleep(1)
                    st.rerun()
                else:
                    st.warning("Vui l√≤ng nh·∫≠p c·∫£m nh·∫≠n c·ªßa b·∫°n tr∆∞·ªõc khi l∆∞u!")
        
        with col2:
            if st.button("‚ùå H·ªßy", key="cancel_543", use_container_width=True):
                st.session_state.show_543_sharing = False
                st.rerun()

# --- TAB 3: B√ÄI T·∫¨P QUAN S√ÅT ---
with tab3:
    st.header("üñºÔ∏è √î C·ª≠a S·ªï Th·∫ßn K·ª≥")
    st.write("M·ªôt b√†i t·∫≠p ƒë∆°n gi·∫£n ƒë·ªÉ th·ª±c h√†nh quan s√°t kh√¥ng ph√°n x√©t.")
    st.markdown("""
    **H∆∞·ªõng d·∫´n:**
    1.  H√£y d√†nh m·ªôt ph√∫t nh√¨n ra ngo√†i c·ª≠a s·ªï.
    2.  ƒê·ª´ng c·ªë g·∫Øng ƒë·∫∑t t√™n cho nh·ªØng g√¨ b·∫°n th·∫•y. Ch·ªâ c·∫ßn ch√∫ √Ω ƒë·∫øn **m√†u s·∫Øc**, **h√¨nh d·∫°ng** v√† **s·ª± chuy·ªÉn ƒë·ªông**.
    3.  H√£y nh√¨n m·ªçi th·ª© nh∆∞ th·ªÉ b·∫°n ƒëang th·∫•y ch√∫ng l·∫ßn ƒë·∫ßu ti√™n.
    """)
    if st.button("B·∫Øt ƒë·∫ßu 1 ph√∫t quan s√°t", type="primary", key="quan_sat", use_container_width=True):
        progress_bar = st.progress(0)
        status_text = st.empty()
        
        for i in range(61):
            progress_value = i / 60.0
            progress_bar.progress(min(progress_value, 1.0))
            status_text.text(f"Th·ªùi gian c√≤n l·∫°i: {60-i} gi√¢y")
            time.sleep(1)
            
        status_text.success("ƒê√£ h·∫øt m·ªôt ph√∫t. C·∫£m ∆°n b·∫°n ƒë√£ d√†nh th·ªùi gian cho ch√≠nh m√¨nh. ‚ù§Ô∏è")
        
        # Th√™m n√∫t chia s·∫ª c·∫£m nh·∫≠n sau khi ho√†n th√†nh quan s√°t
        st.write("---")
        if st.button("üí¨ Chia s·∫ª c·∫£m nh·∫≠n", key="share_observation", use_container_width=True):
            st.session_state.show_observation_sharing = True
            st.rerun()

    # Hi·ªÉn th·ªã form chia s·∫ª c·∫£m nh·∫≠n n·∫øu ƒë∆∞·ª£c k√≠ch ho·∫°t
    if st.session_state.get("show_observation_sharing", False):
        st.markdown("#### üí≠ H√£y chia s·∫ª c·∫£m nh·∫≠n c·ªßa b·∫°n v·ªÅ b√†i t·∫≠p quan s√°t:")
        feeling_content = st.text_area(
            "C·∫£m nh·∫≠n c·ªßa b·∫°n:",
            placeholder="V√≠ d·ª•: Khi quan s√°t kh√¥ng ph√°n x√©t, t√¥i c·∫£m th·∫•y th∆∞ gi√£n v√† nh·∫≠n ra nhi·ªÅu ƒëi·ªÅu m·ªõi...",
            key="observation_feeling",
            help="H√£y m√¥ t·∫£ nh·ªØng g√¨ b·∫°n c·∫£m nh·∫≠n ƒë∆∞·ª£c khi th·ª±c h√†nh b√†i t·∫≠p quan s√°t"
        )
        
        col1, col2 = st.columns(2)
        with col1:
            if st.button("üíæ L∆∞u v√†o nh·∫≠t k√Ω c·∫£m x√∫c", key="save_observation", use_container_width=True):
                if feeling_content.strip():
                    add_mood_entry("√î C·ª≠a S·ªï Th·∫ßn K·ª≥", feeling_content.strip())
                    st.success("‚úÖ ƒê√£ l∆∞u c·∫£m nh·∫≠n v√†o nh·∫≠t k√Ω c·∫£m x√∫c!")
                    st.session_state.show_observation_sharing = False
                    time.sleep(1)
                    st.rerun()
                else:
                    st.warning("Vui l√≤ng nh·∫≠p c·∫£m nh·∫≠n c·ªßa b·∫°n tr∆∞·ªõc khi l∆∞u!")
        
        with col2:
            if st.button("‚ùå H·ªßy", key="cancel_observation", use_container_width=True):
                st.session_state.show_observation_sharing = False
                st.rerun()

# --- PH·∫¶N XEM L·ªäCH S·ª¨ G√ìCA AN Y√äN ---
st.write("---")
st.header("üìñ L·ªãch S·ª≠ G√≥c An Y√™n")

if st.button("üìñ Xem l·ªãch s·ª≠ G√≥c An Y√™n", use_container_width=True):
    st.session_state.show_history = not st.session_state.get("show_history", False)

if st.session_state.get("show_history", False):
    st.markdown("### üí≠ C√°c c·∫£m nh·∫≠n ƒë√£ l∆∞u t·ª´ G√≥c An Y√™n:")
    
    # L·∫•y t·∫•t c·∫£ entries t·ª´ G√≥c An Y√™n (t·∫•t c·∫£ 3 lo·∫°i b√†i t·∫≠p)
    all_entries = get_mood_entries()
    goc_an_yen_exercises = ["H∆°i Th·ªü Nhi·ªám M√†u", "Ch·∫°m V√†o Hi·ªán T·∫°i (5-4-3-2-1)", "√î C·ª≠a S·ªï Th·∫ßn K·ª≥"]
    
    # L·ªçc entries t·ª´ G√≥c An Y√™n
    goc_an_yen_entries = [entry for entry in all_entries if entry["exercise_type"] in goc_an_yen_exercises]
    
    if goc_an_yen_entries:
        # S·∫Øp x·∫øp theo th·ªùi gian m·ªõi nh·∫•t tr∆∞·ªõc
        goc_an_yen_entries.sort(key=lambda x: x["timestamp"], reverse=True)
        
        for entry in goc_an_yen_entries:
            with st.container():
                col1, col2 = st.columns([3, 1])
                
                with col1:
                    # Ch·ªçn emoji theo lo·∫°i b√†i t·∫≠p
                    if entry["exercise_type"] == "H∆°i Th·ªü Nhi·ªám M√†u":
                        icon = "üå¨Ô∏è"
                    elif entry["exercise_type"] == "Ch·∫°m V√†o Hi·ªán T·∫°i (5-4-3-2-1)":
                        icon = "üñêÔ∏è"
                    else:
                        icon = "üñºÔ∏è"
                    
                    st.markdown(f"""
                    <div style="background-color: #f0f8ff; border-left: 4px solid #4682b4; 
                                padding: 1rem; border-radius: 8px; margin-bottom: 10px;">
                        <div style="font-size: 0.9em; color: #666; margin-bottom: 5px;">
                            {icon} <strong>{entry["exercise_type"]}</strong> ‚Ä¢ {entry["timestamp"]}
                        </div>
                        <div style="color: #333; line-height: 1.4;">
                            {entry["content"]}
                        </div>
                    </div>
                    """, unsafe_allow_html=True)
                
                st.write("")  # Add spacing between entries
    else:
        st.info("üí° Ch∆∞a c√≥ c·∫£m nh·∫≠n n√†o ƒë∆∞·ª£c l∆∞u t·ª´ G√≥c An Y√™n. H√£y th·ª±c h√†nh m·ªôt b√†i t·∫≠p v√† chia s·∫ª c·∫£m nh·∫≠n c·ªßa b·∫°n!")

    if st.button("üîÑ L√†m m·ªõi l·ªãch s·ª≠", key="refresh_history"):
        st.rerun()
