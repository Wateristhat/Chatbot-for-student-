# pages/1_‚ú®_Li·ªÅu_Thu·ªëc_Tinh_Th·∫ßn.py
import streamlit as st
import random

# --- PAGE CONFIG ---
st.set_page_config(
    page_title="Li·ªÅu Thu·ªëc Tinh Th·∫ßn",
    page_icon="‚ú®",
    layout="centered"
)

# --- LOGIN CHECK ---
if not st.session_state.get('user_id'):
    st.warning("B·∫°n ∆°i, h√£y quay v·ªÅ Trang Ch·ªß ƒë·ªÉ ƒëƒÉng nh·∫≠p nh√©! ‚ù§Ô∏è")
    st.stop()

# --- CSS AND FONTS ---
st.markdown("""
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
<style>
    @import url('https://fonts.googleapis.com/css2?family=Quicksand:wght@400;500;600;700&display=swap');
    html, body, [class*="css"] { font-family: 'Quicksand', Arial, sans-serif; }
    /* (All your other custom CSS styles are kept here) */
    .message-card {
        background: linear-gradient(100deg, #e1ffea 0%, #fff6eb 100%);
        border-radius: 15px; border: 1.5px solid #e3e7ea; padding: 2rem 1.3rem;
        margin: 1.5rem 0; font-size: 1.23rem; text-align: center;
        box-shadow: 0 4px 20px rgba(0,0,0,0.07); animation: popIn 0.5s;
    }
    .category-icon { font-size: 2.3rem; margin-bottom: 0.25rem; display:block; }
    @keyframes popIn {
        0% { opacity:0; transform:scale(0.8);}
        100% { opacity:1; transform:scale(1);}
    }
</style>
""", unsafe_allow_html=True)


# --- CONTENT LIBRARY ---
MESSAGE_CATEGORIES = {
    "courage": {
        "label": "C·∫ßn C·ªï V≈©",
        "icon": "<i class='fa-solid fa-bullhorn category-icon' style='color:#ff6a00'></i>",
        "messages": [
            "H√¥m nay, t√¥i ch·ªçn b√¨nh y√™n.", "T√¥i ƒë·ªß m·∫°nh m·∫Ω ƒë·ªÉ v∆∞·ª£t qua m·ªçi th·ª≠ th√°ch.",
            "T√¥i x·ª©ng ƒë√°ng ƒë∆∞·ª£c y√™u th∆∞∆°ng v√† h·∫°nh ph√∫c.", "M·ªói h∆°i th·ªü ƒë·ªÅu mang l·∫°i cho t√¥i s·ª©c m·∫°nh.",
            "T√¥i bi·∫øt ∆°n v√¨ con ng∆∞·ªùi c·ªßa t√¥i ngay b√¢y gi·ªù."
        ]
    },
    "fun": {
        "label": "Mu·ªën Vui V·∫ª",
        "icon": "<i class='fa-solid fa-face-laugh-beam category-icon' style='color:#fbbf24'></i>",
        "messages": [
            "S·ª± th·∫≠t th√∫ v·ªã: R√°i c√° bi·ªÉn th∆∞·ªùng n·∫Øm tay nhau khi ng·ªß ƒë·ªÉ kh√¥ng b·ªã tr√¥i ƒëi m·∫•t.",
            "ƒê·ªë b·∫°n: C√°i g√¨ lu√¥n ·ªü ph√≠a tr∆∞·ªõc b·∫°n, nh∆∞ng b·∫°n kh√¥ng bao gi·ªù th·∫•y ƒë∆∞·ª£c? ... ƒê√≥ l√† t∆∞∆°ng lai!",
            "H√£y m·ªâm c∆∞·ªùi nh√©, v√¨ n·ª• c∆∞·ªùi c·ªßa b·∫°n c√≥ th·ªÉ th·∫Øp s√°ng m·ªôt ng√†y c·ªßa ai ƒë√≥.",
        ]
    },
    "peace": {
        "label": "T√¨m B√¨nh Y√™n",
        "icon": "<i class='fa-solid fa-spa category-icon' style='color:#49c5b6'></i>",
        "messages": [
            "H√£y h√≠t m·ªôt h∆°i th·∫≠t s√¢u... v√† th·ªü ra th·∫≠t ch·∫≠m. B·∫°n ƒëang ·ªü ƒë√¢y, ngay b√¢y gi·ªù.",
            "Nh√¨n ra ngo√†i c·ª≠a s·ªï. B·∫°n th·∫•y m√†u xanh n√†o kh√¥ng?",
            "H√£y ch√∫ √Ω ƒë·∫øn c·∫£m gi√°c c·ªßa ƒë√¥i ch√¢n ƒëang ch·∫°m ƒë·∫•t.",
        ]
    }
}

# --- SESSION STATE INITIALIZATION ---
if 'message_category' not in st.session_state:
    st.session_state.message_category = None
if 'current_message' not in st.session_state:
    st.session_state.current_message = ""

# --- HANDLER FUNCTIONS ---
def select_category(category_key):
    """Sets the category and picks the first random message."""
    st.session_state.message_category = category_key
    st.session_state.current_message = random.choice(MESSAGE_CATEGORIES[category_key]["messages"])

def get_new_message():
    """Picks a new random message from the current category."""
    category_key = st.session_state.message_category
    if category_key:
        st.session_state.current_message = random.choice(MESSAGE_CATEGORIES[category_key]["messages"])

# --- MAIN UI ---
st.title("‚ú® Li·ªÅu Thu·ªëc Tinh Th·∫ßn Cho B·∫°n")

# *** CORRECTED LINK TO HOMEPAGE ***
st.page_link("pages/0_üíñ_Trang_ch·ªß.py", label="‚¨ÖÔ∏è Quay v·ªÅ Trang ch·ªß", icon="üè†")

st.markdown(
    "<div style='font-size:1.1rem;line-height:1.6;'>"
    "ƒê√¥i khi, ch√∫ng ta ch·ªâ c·∫ßn m·ªôt l·ªùi nh·∫Øc nh·ªü nh·ªè ƒë·ªÉ c·∫£m th·∫•y t·ªët h∆°n.<br>"
    "<b>B·∫°n ƒëang c·∫ßn ƒëi·ªÅu g√¨ l√∫c n√†y?</b>"
    "</div>", unsafe_allow_html=True
)
st.write("---")

# --- CATEGORY SELECTION BUTTONS ---
cols = st.columns(len(MESSAGE_CATEGORIES))
for idx, (key, value) in enumerate(MESSAGE_CATEGORIES.items()):
    with cols[idx]:
        st.button(
            label=value["label"],
            on_click=select_category,
            args=(key,),
            key=f"btn_{key}",
            use_container_width=True
        )

st.write("---")

# --- DISPLAY SELECTED MESSAGE ---
if st.session_state.current_message and st.session_state.message_category:
    category_key = st.session_state.message_category
    category_info = MESSAGE_CATEGORIES[category_key]
    
    # Message card
    st.markdown(f"""
    <div class="message-card">
        {category_info['icon']}
        <div>{st.session_state.current_message}</div>
    </div>
    """, unsafe_allow_html=True)

    # "Get another message" button
    st.button(
        "üîÑ Nh·∫≠n m·ªôt th√¥ng ƒëi·ªáp kh√°c c√πng lo·∫°i",
        on_click=get_new_message,
        key="btn_next_message",
        use_container_width=True
    )

    # Occasional fun effect
    if random.random() < 0.2:
        st.balloons()
